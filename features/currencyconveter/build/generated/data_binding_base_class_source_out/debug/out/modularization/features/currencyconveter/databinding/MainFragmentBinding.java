// Generated by data binding compiler. Do not edit!
package modularization.features.currencyconveter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import modularization.features.currencyconveter.R;
import modularization.features.currencyconveter.ui.adapters.CurrencyListAdapter;
import modularization.features.currencyconveter.ui.adapters.SpinnerAdapter;
import modularization.features.currencyconveter.ui.home.HomeViewModel;

public abstract class MainFragmentBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final Spinner currencyListSpinner;

  @NonNull
  public final EditText currencyTo;

  @NonNull
  public final Guideline guideline08;

  @NonNull
  public final Guideline guideline92;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView recyclerView;

  @Bindable
  protected CurrencyListAdapter mAdapter;

  @Bindable
  protected SpinnerAdapter mSpinnerAdapter;

  @Bindable
  protected HomeViewModel mViewModel;

  protected MainFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView cardView, Spinner currencyListSpinner, EditText currencyTo,
      Guideline guideline08, Guideline guideline92, ConstraintLayout main,
      RecyclerView recyclerView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardView = cardView;
    this.currencyListSpinner = currencyListSpinner;
    this.currencyTo = currencyTo;
    this.guideline08 = guideline08;
    this.guideline92 = guideline92;
    this.main = main;
    this.recyclerView = recyclerView;
  }

  public abstract void setAdapter(@Nullable CurrencyListAdapter adapter);

  @Nullable
  public CurrencyListAdapter getAdapter() {
    return mAdapter;
  }

  public abstract void setSpinnerAdapter(@Nullable SpinnerAdapter spinnerAdapter);

  @Nullable
  public SpinnerAdapter getSpinnerAdapter() {
    return mSpinnerAdapter;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MainFragmentBinding>inflateInternal(inflater, R.layout.main_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MainFragmentBinding>inflateInternal(inflater, R.layout.main_fragment, null, false, component);
  }

  public static MainFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MainFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (MainFragmentBinding)bind(component, view, R.layout.main_fragment);
  }
}

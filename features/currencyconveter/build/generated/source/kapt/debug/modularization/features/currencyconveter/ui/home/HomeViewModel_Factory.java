// Generated by Dagger (https://dagger.dev).
package modularization.features.currencyconveter.ui.home;

import android.content.SharedPreferences;
import dagger.internal.Factory;
import javax.inject.Provider;
import modularization.features.currencyconveter.data.repositories.Repository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<Repository> repositoryProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public HomeViewModel_Factory(Provider<Repository> repositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.repositoryProvider = repositoryProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(repositoryProvider.get(), sharedPreferencesProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<Repository> repositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new HomeViewModel_Factory(repositoryProvider, sharedPreferencesProvider);
  }

  public static HomeViewModel newInstance(Repository repository,
      SharedPreferences sharedPreferences) {
    return new HomeViewModel(repository, sharedPreferences);
  }
}
